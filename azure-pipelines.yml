# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
      include:
      - master
      - develop
      - releases/*

strategy:
  matrix:
    Python37Linux:
      imageName: 'ubuntu-20.04'
      python.version: '3.7'
    Python38Linux:
      imageName: 'ubuntu-20.04'
      python.version: '3.8'
    Python39Linux:
      imageName: 'ubuntu-20.04'
      python.version: '3.9'
    Python37Mac:
      imageName: 'macos-11'
      python.version: '3.7'
    Python38Mac:
      imageName: 'macos-11'
      python.version: '3.8'
    Python39Mac:
      imageName: 'macos-11'
      python.version: '3.9'
    Python37Windows:
      imageName: 'windows-2019'
      python.version: '3.7'
    Python38Windows:
      imageName: 'windows-2019'
      python.version: '3.8'
    Python39Windows:
      imageName: 'windows-2019'
      python.version: '3.9'
  maxParallel: 9

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    python -m pip install -U setuptools
    pip install -r requirements.txt
    python -m spacy download en_core_web_sm
  displayName: 'Install dependencies'

- script: |
    cd extractacy
    python -m pytest test.py
  displayName: 'pytest'

- script: |
    python setup.py sdist
  displayName: 'build sdist'

- bash: |
    SDIST=$(python -c "import os;print(os.listdir('./dist')[-1])" 2>&1)
    pip install dist/$SDIST
  displayName: 'Install from sdist'

- script: |
    cd extractacy
    python -m pytest test.py
  displayName: 'pytest'